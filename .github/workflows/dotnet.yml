name: .NET Core Build & Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2019-latest
        env:
          SA_PASSWORD: "YourStrong!Passw0rd"
          ACCEPT_EULA: "Y"
        ports:
          - 1433:1433
        options: >-
          --health-cmd "exit 0" # Override health check because it can fail temporarily during setup
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      # - name: Install Dependencies
      #   run: dotnet restore

      # - name: Build Solution
      #   run: dotnet build --configuration Release --no-restore

      # - name: Wait for SQL Server to be ready
      #   run: |
      #     echo "Waiting for SQL Server to start..."
      #     for i in {1..30}; do
      #       if sqlcmd -S localhost -U sa -P "YourStrong!Passw0rd" -Q "SELECT 1" > /dev/null 2>&1; then
      #         echo "SQL Server is up!"
      #         break
      #       fi
      #       echo "Waiting for SQL Server..."
      #       sleep 5
      #     done

      # - name: Run Tests
      #   env:
      #     ConnectionStrings__Database: "Server=localhost;Database=TestDb;User Id=sa;Password=YourStrong!Passw0rd;"
      #   run: dotnet test --configuration Release

      # ### Python Setup and Testing ###

      # - name: Set up Python
      #   uses: actions/setup-python@v4
      #   with:
      #     python-version: '3.x'

      # - name: Install Python Dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install -r requirements.txt

      # - name: Run Python Tests
      #   env:
      #     DB_CONNECTION_STRING: "Server=localhost;Database=TestDb;User Id=sa;Password=YourStrong!Passw0rd;"
      #   run: |
      #     python -m unittest discover -s tests